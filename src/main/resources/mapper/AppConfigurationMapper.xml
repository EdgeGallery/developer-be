<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~    Copyright 2020 Huawei Technologies Co., Ltd.
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.edgegallery.developer.mapper.application.AppConfigurationMapper">
  <resultMap id="TrafficRuleMap"
    type="org.edgegallery.developer.model.application.configuration.TrafficRule">
    <id property="id" column="id"/>
    <result property="trafficRuleId" column="traffic_rule_id"/>
    <result property="action" column="action"/>
    <result property="priority" column="priority"/>
    <result property="filterType" column="filter_type"/>
    <result property="trafficFilter" column="traffic_filter"
      typeHandler="org.edgegallery.developer.model.handler.JsonCollectionTypeHandler"/>
    <result property="dstInterface" column="dst_interface"
      typeHandler="org.edgegallery.developer.model.handler.JsonCollectionTypeHandler"/>
  </resultMap>
  <resultMap id="DnsRuleMap"
    type="org.edgegallery.developer.model.application.configuration.DnsRule">
    <id property="id" column="id"/>
    <result property="dnsRuleId" column="dns_rule_id"/>
    <result property="domainName" column="domain_name"/>
    <result property="ipAddressType" column="ip_address_type"/>
    <result property="ipAddress" column="ip_address"/>
    <result property="ttl" column="ttl"/>
  </resultMap>

  <resultMap id="AppServiceProducedMap"
    type="org.edgegallery.developer.model.application.configuration.AppServiceProduced">
    <id property="id" column="id"/>
    <result property="serName" column="ser_name"/>
    <result property="version" column="version"/>
    <result property="dnsRuleIdList" column="dns_rule_id_list"
      typeHandler="org.edgegallery.developer.model.handler.JsonCollectionTypeHandler"/>
    <result property="trafficRuleIdList" column="traffic_rule_id_list"
      typeHandler="org.edgegallery.developer.model.handler.JsonCollectionTypeHandler"/>
  </resultMap>
  <resultMap id="AppServiceRequiredMap"
    type="org.edgegallery.developer.model.application.configuration.AppServiceRequired">
    <id property="id" column="id"/>
    <result property="serName" column="ser_name"/>
    <result property="version" column="version"/>
    <result property="requestedPermissions" column="requested_permissions"/>
    <result property="appId" column="ser_app_id"/>
    <result property="packageId" column="package_id"/>
  </resultMap>
  <resultMap id="AppCertificateMap"
    type="org.edgegallery.developer.model.application.configuration.AppCertificate">
    <id property="id" column="id"/>
    <result property="ak" column="ak"/>
    <result property="sk" column="sk"/>
  </resultMap>

  <sql id="trafficRuleAllColumn">
    id, traffic_rule_id, action, priority, filter_type, traffic_filter, dst_interface
  </sql>

  <sql id="DnsRuleAllColumn">
    id, dns_rule_id, domain_name, ip_address_type, ip_address, ttl
  </sql>

  <sql id="AppServiceProducedAllColumn">
    id, ser_name, version, dns_rule_id_list, traffic_rule_id_list
  </sql>

  <sql id="AppServiceRequiredAllColumn">
    id, ser_name, version, requested_permissions, ser_app_id, package_id
  </sql>

  <sql id="AppCertificateAllColumn">
    id, ak, sk
  </sql>

  <insert id="createTrafficRule">
    insert into tbl_app_traffic_rule (id, app_id, traffic_rule_id, action, priority, filter_type, traffic_filter, dst_interface)
    values
    ( #{trafficRule.id}, #{applicationId}, #{trafficRule.trafficRuleId}, #{trafficRule.action}, #{trafficRule.priority}, #{trafficRule.filterType},
    #{trafficRule.trafficFilter, jdbcType=OTHER, typeHandler=org.edgegallery.developer.model.handler.JsonCollectionTypeHandler},
    #{trafficRule.dstInterface, jdbcType=OTHER, typeHandler=org.edgegallery.developer.model.handler.JsonCollectionTypeHandler})
  </insert>

  <update id="modifyTrafficRule" parameterType="org.edgegallery.developer.model.application.configuration.TrafficRule">
    UPDATE
    tbl_app_traffic_rule
    SET
    traffic_rule_id = #{trafficRuleId}, action = #{action}, priority = #{priority}, filter_type = #{filterType},
    traffic_Filter = #{trafficFilter, jdbcType=OTHER, typeHandler=org.edgegallery.developer.model.handler.JsonCollectionTypeHandler},
    dst_interface = #{dstInterface, jdbcType=OTHER, typeHandler=org.edgegallery.developer.model.handler.JsonCollectionTypeHandler}
    WHERE
    id = #{id}
  </update>

  <delete id="deleteTrafficRule" parameterType="String">
    DELETE FROM tbl_app_traffic_rule WHERE id = #{id};
  </delete>

  <select id="getAllTrafficRules" parameterType="String" resultMap="TrafficRuleMap">
    SELECT
    <include refid="trafficRuleAllColumn"/>
    FROM tbl_app_traffic_rule where app_id = #{applicationId}
  </select>

  <insert id="createDnsRule">
    insert into tbl_app_dns_rule (id, app_id, dns_rule_id, domain_name, ip_address_type, ip_address, ttl)
    values
    ( #{dnsRule.id}, #{applicationId}, #{dnsRule.dnsRuleId}, #{dnsRule.domainName},
    #{dnsRule.ipAddressType}, #{dnsRule.ipAddress}, #{dnsRule.ttl})
  </insert>

  <update id="modifyDnsRule" parameterType="org.edgegallery.developer.model.application.configuration.DnsRule">
    UPDATE
    tbl_app_dns_rule
    SET
    dns_rule_id = #{dnsRuleId}, domain_name = #{domainName}, ip_address_type = #{ipAddressType},
    ip_address = #{ipAddress},
    ttl = #{ttl}
    WHERE
    id = #{id}
  </update>

  <delete id="deleteDnsRule" parameterType="String">
    DELETE FROM tbl_app_dns_rule WHERE id = #{id};
  </delete>

  <select id="getAllDnsRules" parameterType="String" resultMap="DnsRuleMap">
    SELECT
    <include refid="DnsRuleAllColumn"/>
    FROM tbl_app_dns_rule where app_id = #{applicationId}
  </select>


  <insert id="createServiceProduced">
    insert into tbl_app_service_produced (id, app_id, ser_name, version, dns_rule_id_list, traffic_rule_id_list)
    values
    ( #{appServiceProduced.id}, #{applicationId}, #{appServiceProduced.serName}, #{appServiceProduced.version},
    #{appServiceProduced.dnsRuleIdList, jdbcType=OTHER, typeHandler=org.edgegallery.developer.model.handler.JsonCollectionTypeHandler},
    #{appServiceProduced.trafficRuleIdList, jdbcType=OTHER, typeHandler=org.edgegallery.developer.model.handler.JsonCollectionTypeHandler})
  </insert>

  <update id="modifyServiceProduced" parameterType="org.edgegallery.developer.model.application.configuration.AppServiceProduced">
    UPDATE
    tbl_app_service_produced
    SET
    ser_name = #{serName}, version = #{version},
    dns_rule_id_list = #{dnsRuleIdList, jdbcType=OTHER, typeHandler=org.edgegallery.developer.model.handler.JsonCollectionTypeHandler},
    traffic_rule_id_list = #{trafficRuleIdList, jdbcType=OTHER, typeHandler=org.edgegallery.developer.model.handler.JsonCollectionTypeHandler}
    WHERE
    id = #{id}
  </update>

  <delete id="deleteServiceProduced" parameterType="String">
    DELETE FROM tbl_app_service_produced WHERE id = #{id};
  </delete>

  <select id="getAllServiceProduced" parameterType="String" resultMap="AppServiceProducedMap">
    SELECT
    <include refid="AppServiceProducedAllColumn"/>
    FROM tbl_app_service_produced where app_id = #{applicationId}
  </select>


  <insert id="createServiceRequired">
    insert into tbl_app_service_required (id, app_id, ser_name, version, requested_permissions, ser_app_id, package_id)
    values
    ( #{serviceRequired.id}, #{applicationId}, #{serviceRequired.serName}, #{serviceRequired.version},
    #{serviceRequired.requestedPermissions}, #{serviceRequired.appId}, #{serviceRequired.packageId})
  </insert>

  <update id="modifyServiceRequired" parameterType="org.edgegallery.developer.model.application.configuration.AppServiceRequired">
    UPDATE
    tbl_app_service_required
    SET
    ser_name = #{serName}, version = #{version}, requested_permissions = #{requestedPermissions},
    ser_app_id = #{appId}, package_id = #{packageId}
    WHERE
    id = #{id}
  </update>

  <delete id="deleteServiceRequired" parameterType="String">
    DELETE FROM tbl_app_service_required WHERE id = #{id};
  </delete>

  <select id="getAllServiceRequired" parameterType="String" resultMap="AppServiceProducedMap">
    SELECT
    <include refid="AppServiceRequiredAllColumn"/>
    FROM tbl_app_service_required where app_id = #{applicationId}
  </select>

  <insert id="createAppCertificate" parameterType="org.edgegallery.developer.model.application.configuration.DnsRule">
    insert into tbl_app_certificate (id, app_id, ak, sk)
    values
    ( #{appCertificate.id}, #{applicationId}, #{appCertificate.ak}, #{appCertificate.sk})
  </insert>

  <update id="modifyAppCertificate" parameterType="org.edgegallery.developer.model.application.configuration.AppCertificate">
    UPDATE
    tbl_app_certificate
    SET
    ak = #{ak}, sk = #{sk}
    WHERE
    id = #{id}
  </update>

  <delete id="deleteAppCertificate" parameterType="String">
    DELETE FROM tbl_app_certificate WHERE id = #{id};
  </delete>

  <select id="getAppCertificate" parameterType="String" resultMap="AppCertificateMap">
    SELECT
    <include refid="AppCertificateAllColumn"/>
    FROM tbl_app_certificate where app_id = #{applicationId}
  </select>


</mapper>