#
#    Copyright 2020 Huawei Technologies Co., Ltd.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
swagger: "2.0"
info:
  version: "1.0.0"
  title: "swagger definition for org.edgegallery.developer.controller.HostController"
  x-java-interface: "cse.gen.openMec.mec_developer.hosts.HostControllerIntf"
basePath: "/mec/developer/v1/hosts"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /:
    get:
      tags:
        - "Host"
      summary: "get all server(build and test app)"
      operationId: "getAllHosts"
      produces:
        - "application/json;charset=UTF-8"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MepHost"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorRespDto"
    post:
      tags:
        - "Host"
      summary: "create one server"
      operationId: "createHost"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - in: "body"
          name: "host"
          description: "MepHost"
          required: true
          schema:
            $ref: "#/definitions/MepHost"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/MepHost"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorRespDto"
  /{hostId}:
    get:
      tags:
        - "Host"
      summary: "get one server by hostId"
      operationId: "getHost"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - name: "hostId"
          in: "path"
          description: "hostId"
          required: true
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/MepHost"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorRespDto"
    put:
      tags:
        - "Host"
      summary: "update one server by hostId"
      operationId: "modifyHost"
      consumes:
        - "application/json;charset=UTF-8"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - name: "hostId"
          in: "path"
          required: true
          type: "string"
        - in: "body"
          name: "host"
          required: true
          schema:
            $ref: "#/definitions/MepHost"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/MepHost"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorRespDto"
    delete:
      tags:
        - "Host"
      summary: "delete one server by hostId"
      operationId: "deleteHost"
      produces:
        - "application/json;charset=UTF-8"
      parameters:
        - name: "hostId"
          in: "path"
          description: "hostId"
          required: true
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            type: "boolean"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorRespDto"
definitions:
  MepHost:
    type: "object"
    required:
      - "status"
    properties:
      hostId:
        type: "string"
      name:
        type: "string"
      address:
        type: "string"
      architecture:
        type: "string"
      status:
        type: "string"
        enum:
          - "NORMAL"
          - "BUSY"
        x-java-class: "org.edgegallery.developer.model.workspace.EnumHostStatus"
      ip:
        type: "string"
      protocol:
        type: "string"
      port:
        type: "integer"
        format: "int32"
      os:
        type: "string"
      portRangeMin:
        type: "integer"
        format: "int32"
      portRangeMax:
        type: "integer"
        format: "int32"
    x-java-class: "org.edgegallery.developer.model.workspace.MepHost"
  ErrorRespDto:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      detail:
        type: "string"
    x-java-class: "org.edgegallery.developer.response.ErrorRespDto"