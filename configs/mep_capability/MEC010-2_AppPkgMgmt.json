{
  "info": {
    "title": "ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management",
    "version": "2.1.1",
    "description": "ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management described using OpenAPI.",
    "license": {
      "name": "BSD-3-Clause",
      "url": "https://forge.etsi.org/legal-matters"
    },
    "contact": {
      "name": "ETSI Forge",
      "email": "cti_support@etsi.org",
      "url": "https://forge.etsi.org/rep/mec/gs010-2-app-pkg-lcm-api"
    }
  },
  "externalDocs": {
    "description": "ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management, v2.1.1",
    "url": "https://www.etsi.org/deliver/etsi_gs/MEC/001_099/01002/02.01.01_60/gs_MEC01002v020101p.pdf"
  },
  "servers": [
    {
      "url": "https://localhost/app_pkgm/v1"
    }
  ],
  "openapi": "3.0.0",
  "tags": [
    {
      "name": "app-pkgm",
      "description": "App Package management"
    },
    {
      "name": "app-pkgm-notifications",
      "description": "App Package management notifications"
    }
  ],
  "paths": {
    "/app_packages": {
      "post": {
        "tags": [
          "app-pkgm"
        ],
        "summary": "Create a resource for on-boarding an application package to a MEO",
        "description": "Create a resource for on-boarding an application package to a MEO",
        "operationId": "app_packagesPOST",
        "requestBody": {
          "description": "Resource to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppPkg"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response for resource creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppPkgInfo"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      },
      "get": {
        "tags": [
          "app-pkgm"
        ],
        "summary": "Queries information relating to on-boarded application packages in the MEO",
        "description": "queries information relating to on-boarded application packages in the MEO",
        "operationId": "app_packagesGET",
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Attribute-based filtering parameters according to ETSI GS MEC 009"
          },
          {
            "in": "query",
            "name": "all_fields",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Include all complex attributes in the response."
          },
          {
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Complex attributes of AppPkgInfo to be included into the response"
          },
          {
            "in": "query",
            "name": "exclude_fields",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Complex attributes of AppPkgInfo to be excluded from the response."
          },
          {
            "in": "query",
            "name": "exclude_default",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Indicates to exclude the following complex attributes of AppPkgInfo from the response."
          }
        ],
        "responses": {
          "200": {
            "description": "Contains a representation of the application package resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppPkgInfo"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      }
    },
    "/app_packages/{appPkgId}": {
      "parameters": [
        {
          "in": "path",
          "name": "appPkgId",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Identifier of an individual application package resource"
        }
      ],
      "get": {
        "tags": [
          "app-pkgm"
        ],
        "summary": "Queries the information related to individual application package resources",
        "description": "Queries the information related to individual application package resources",
        "operationId": "app_packageGET",
        "responses": {
          "200": {
            "description": "Contains a representation of the application package resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPkgInfo"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      },
      "delete": {
        "tags": [
          "app-pkgm"
        ],
        "summary": "Deletes an individual application package resources",
        "description": "Deletes an individual application package resources",
        "operationId": "app_packageDELETE",
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      },
      "patch": {
        "tags": [
          "app-pkgm"
        ],
        "summary": "Updates the operational state of an individual application package resource",
        "description": "Updates the operational state of an individual application package resources",
        "operationId": "app_packagePATCH",
        "requestBody": {
          "description": "Operational state to be set",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPkgInfoModifications"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Shows that the operation has been completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPkgInfoModifications"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      }
    },
    "/subscriptions": {
      "post": {
        "tags": [
          "app-pkgm"
        ],
        "summary": "Subscribe to notifications about on-boarding an application package",
        "description": "Subscribe to notifications about on-boarding an application package",
        "operationId": "subscriptionsPOST",
        "requestBody": {
          "description": "The input parameters of subscribe operation to notifications",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPkgSubscription"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response for created subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPkgSubscriptionInfo"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      },
      "get": {
        "tags": [
          "app-pkgm"
        ],
        "summary": "used to retrieve the information of subscriptions to individual application package resource in MEO",
        "description": "used to retrieve the information of subscriptions to individual application package resource in MEO package",
        "operationId": "subscriptionsGET",
        "responses": {
          "200": {
            "description": "List of zero or more subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPkgSubscriptionLinkList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}": {
      "parameters": [
        {
          "in": "path",
          "name": "subscriptionId",
          "schema": {
            "type": "string"
          },
          "description": "Identifier of an individual subscription to notifications about application package changes",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "app-pkgm"
        ],
        "summary": "Used to represent an individual subscription to notifications about application package changes.",
        "description": "Used to represent an individual subscription to notifications about application package changes.",
        "operationId": "individualSubscriptionGET",
        "responses": {
          "200": {
            "description": "Representation of the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPkgSubscriptionInfo"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      },
      "delete": {
        "tags": [
          "app-pkgm"
        ],
        "summary": "Deletes the individual subscription to notifications about application package changes in MEO.",
        "description": "Deletes the individual subscription to notifications about application package changes in MEO.",
        "operationId": "individualSubscriptionDELETE",
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      }
    },
    "/user_defined_notification": {
      "post": {
        "tags": [
          "app-pkgm-notifications"
        ],
        "summary": "Registers a notification endpoint to notify application package operations",
        "description": "Registers a notification endpoint to notify application package operations",
        "operationId": "app_pkg_notificationPOST",
        "requestBody": {
          "description": "Notification endpoint to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPkgNotification"
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      }
    },
    "/app_packages/{appPkgId}/appd": {
      "parameters": [
        {
          "in": "path",
          "name": "appPkgId",
          "schema": {
            "type": "string"
          },
          "description": "Identifier of an on-boarded individual application package",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "app-pkgm"
        ],
        "summary": "Reads the content of the AppD of on-boarded individual application package resources.",
        "description": "Reads the content of the AppD of on-boarded individual application package resources.",
        "operationId": "appPkgIdGET",
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Attribute-based filtering parameters according to ETSI GS MEC 009"
          },
          {
            "in": "query",
            "name": "all_fields",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Include all complex attributes in the response."
          },
          {
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Complex attributes of AppPkgInfo to be included into the response"
          },
          {
            "in": "query",
            "name": "exclude_fields",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Complex attributes of AppPkgInfo to be excluded from the response."
          },
          {
            "in": "query",
            "name": "exclude_default",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Indicates to exclude the following complex attributes of AppPkgInfo from the response."
          }
        ],
        "responses": {
          "200": {
            "description": "Content of the AppD is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppD"
                }
              },
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/AppD"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      }
    },
    "/onboarded_app_packages/{appDId}/appd": {
      "parameters": [
        {
          "in": "path",
          "name": "appDId",
          "schema": {
            "type": "string"
          },
          "description": "Identifier of an application descriptor",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "app-pkgm"
        ],
        "summary": "Reads the content of the AppD of on-boarded individual application package resources.",
        "description": "Reads the content of the AppD of on-boarded individual application package resources.",
        "operationId": "appDGET",
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Attribute-based filtering parameters according to ETSI GS MEC 009"
          },
          {
            "in": "query",
            "name": "all_fields",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Include all complex attributes in the response."
          },
          {
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Complex attributes of AppPkgInfo to be included into the response"
          },
          {
            "in": "query",
            "name": "exclude_fields",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Complex attributes of AppPkgInfo to be excluded from the response."
          },
          {
            "in": "query",
            "name": "exclude_default",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Indicates to exclude the following complex attributes of AppPkgInfo from the response."
          }
        ],
        "responses": {
          "200": {
            "description": "Content of the AppD is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppD"
                }
              },
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/AppD"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      }
    },
    "/app_packages/{appPkgId}/package_content": {
      "parameters": [
        {
          "in": "path",
          "name": "appPkgId",
          "schema": {
            "type": "string"
          },
          "description": "Identifier of an on-boarded individual application package",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "app-pkgm"
        ],
        "summary": "Fetch the onboarded application package content identified by appPkgId or appDId.",
        "description": "Fetch the onboarded application package content identified by appPkgId or appDId.",
        "operationId": "appPkgGET",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AppPkgContent.200"
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "416": {
            "$ref": "#/components/responses/416"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      },
      "put": {
        "tags": [
          "app-pkgm"
        ],
        "summary": "Uploads the content of application package.",
        "description": "Uploads the content of application package.",
        "operationId": "appPkgPUT",
        "requestBody": {
          "content": {
            "application/zip": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The application package has been accepted for uploading, but the processing has not been completed."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      }
    },
    "/onboarded_app_packages/{appDId}/package_content": {
      "parameters": [
        {
          "in": "path",
          "name": "appDId",
          "description": "Identifier of an application descriptor",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "app-pkgm"
        ],
        "summary": "Fetch the onboarded application package content identified by appPkgId or appDId.",
        "description": "Fetch the onboarded application package content identified by appPkgId or appDId.",
        "operationId": "appDIdGET",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AppPkgContent.200"
          },
          "206": {
            "$ref": "#/components/responses/206"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "416": {
            "$ref": "#/components/responses/416"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      },
      "put": {
        "tags": [
          "app-pkgm"
        ],
        "summary": "Uploads the content of application package.",
        "description": "Uploads the content of application package.",
        "operationId": "appDIdPUT",
        "requestBody": {
          "content": {
            "application/zip": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The application package has been accepted for uploading, but the processing has not been completed."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "406": {
            "$ref": "#/components/responses/406"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "429": {
            "$ref": "#/components/responses/429"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Algorithm": {
        "description": " Name of the algorithm used to generate the checksum,  as defined in ETSI GS NFV-SOL 004. For example, SHA-256, SHA-512.",
        "type": "string"
      },
      "AppD": {
        "properties": {
          "appDId": {
            "description": "Identifier of this MEC application descriptor. This attribute shall be globally unique. See note 1.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "appDNSRule": {
            "description": "Describes DNS rules the MEC application requires.",
            "items": {
              "$ref": "#/components/schemas/DNSRuleDescriptor"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "DNSRuleDescriptor"
          },
          "appDVersion": {
            "description": "Identifies the version of the application descriptor.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "appDescription": {
            "description": "Human readable description of the MEC application.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "appExtCpd": {
            "description": "Describes external interface(s) exposed by this MEC application.",
            "items": {
              "$ref": "#/components/schemas/AppExternalCpd"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "AppExternalCpd"
          },
          "appFeatureOptional": {
            "description": "Describes features a MEC application may use if available.",
            "items": {
              "$ref": "#/components/schemas/FeatureDependency"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "FeatureDependency"
          },
          "appFeatureRequired": {
            "description": "Describes features a MEC application requires to run.",
            "items": {
              "$ref": "#/components/schemas/FeatureDependency"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "FeatureDependency"
          },
          "appInfoName": {
            "description": "Human readable name for the MEC application.",
            "type": "string",
            "x-etsi-mec-cardinality": "0..1",
            "x-etsi-mec-origin-type": "String"
          },
          "appLatency": {
            "$ref": "#/components/schemas/LatencyDescriptor"
          },
          "appName": {
            "description": "Name to identify the MEC application.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "appProvider": {
            "description": "Provider of the application and of the AppD.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "appServiceOptional": {
            "description": "Describes services a MEC application may use if available.",
            "items": {
              "$ref": "#/components/schemas/ServiceDependency"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "ServiceDependency"
          },
          "appServiceProduced": {
            "description": "Describes services a MEC application is able to produce to the platform or other MEC applications. Only relevant for service-producing apps.",
            "items": {
              "$ref": "#/components/schemas/ServiceDescriptor"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "ServiceDescriptor"
          },
          "appServiceRequired": {
            "description": "Describes services a MEC application requires to run.",
            "items": {
              "$ref": "#/components/schemas/ServiceDependency"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "ServiceDependency"
          },
          "appSoftVersion": {
            "description": "Identifies the version of software of the MEC application.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "appTrafficRule": {
            "description": "Describes traffic rules the MEC application requires.",
            "items": {
              "$ref": "#/components/schemas/TrafficRuleDescriptor"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "TrafficRuleDescriptor"
          },
          "changeAppInstanceStateOpConfig": {
            "$ref": "#/components/schemas/ChangeAppInstanceStateOpConfig"
          },
          "mecVersion": {
            "description": "Identifies version(s) of MEC system compatible with the MEC application described in this version of the AppD.",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "x-etsi-mec-cardinality": "1..N",
            "x-etsi-mec-origin-type": "String"
          },
          "swImageDescriptor": {
            "$ref": "#/components/schemas/SwImageDescriptor"
          },
          "terminateAppInstanceOpConfig": {
            "$ref": "#/components/schemas/TerminateAppInstanceOpConfig"
          },
          "transportDependencies": {
            "description": "Transports, if any, that this application requires to be provided by the platform. These transports will be used by the application to deliver services provided by this application. Only relevant for service-producing apps. See note 2.",
            "items": {
              "$ref": "#/components/schemas/TransportDependency"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "TransportDependency"
          },
          "virtualComputeDescriptor": {
            "$ref": "#/components/schemas/VirtualComputeDescription"
          },
          "virtualStorageDescriptor": {
            "description": "Defines descriptors of virtual storage resources to be used by the MEC application.",
            "items": {
              "$ref": "#/components/schemas/VirtualStorageDescriptor"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "VirtualStorageDescriptor"
          }
        },
        "required": [
          "appDId",
          "appName",
          "appProvider",
          "appSoftVersion",
          "appDVersion",
          "mecVersion",
          "appDescription",
          "virtualComputeDescriptor",
          "swImageDescriptor"
        ],
        "type": "object",
        "x-etsi-notes": "NOTE 1:\tThe appDId shall be used as the unique identifier of the application package that contains this AppD.\nNOTE 2:\tThis attribute indicates groups of transport bindings which a service-producing MEC application requires to be supported by the platform in order to be able to produce its services. At least one of the indicated groups needs to be supported to fulfil the requirements.",
        "x-etsi-ref": "6.2.1.2"
      },
      "AppExternalCpd": {
        "properties": {
          "inherited_attributes": {
            "description": "All attributes inherited from Cpd.",
            "type": "object",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "inherited_attributes"
          },
          "virtualNetworkInterfaceRequirements": {
            "description": "Specifies requirements on a virtual network interface realizing the CPs instantiated from this CPD.",
            "items": {
              "$ref": "#/components/schemas/VirtualNetworkInterfaceRequirements"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N"
          }
        },
        "required": [
          "inherited_attributes"
        ],
        "type": "object",
        "x-etsi-ref": "6.2.1.6"
      },
      "CallbackUri": {
        "description": "The URI of the endpoint for the notification to be sent to.",
        "type": "string",
        "format": "uri"
      },
      "AppDId": {
        "description": "Identifier of this MEC application descriptor. This attribute shall be globally unique.",
        "type": "string"
      },
      "AppProvider": {
        "description": "Provider of the application and of the AppD.",
        "type": "string"
      },
      "AppName": {
        "description": "Name to identify the MEC application.",
        "type": "string"
      },
      "AppDVersion": {
        "description": "Identifies the version of the application descriptor.",
        "type": "string"
      },
      "AppPkgId": {
        "description": "Identifier of the onboarded application package.",
        "type": "string"
      },
      "SubscriptionId": {
        "description": "Identifier of the subscription related to this notification.",
        "type": "string"
      },
      "AppPkgArtifactInfo": {
        "description": "Additional information of application package artifacts that are not application software images. Type is TBD"
      },
      "AppPkgInfo": {
        "description": "'The data type AppPkgInfo represents the parameters for an application package resource'",
        "type": "object",
        "required": [
          "id",
          "appDId",
          "appName",
          "appSoftwareVersion",
          "appDVersion",
          "checksum",
          "softwareImages",
          "onboardingState",
          "operationalState",
          "usageState",
          "_links"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/AppPkgId"
          },
          "appDId": {
            "$ref": "#/components/schemas/AppDId"
          },
          "appProvider": {
            "$ref": "#/components/schemas/AppProvider"
          },
          "appName": {
            "$ref": "#/components/schemas/AppName"
          },
          "appSoftwareVersion": {
            "$ref": "#/components/schemas/AppSoftwareVersion"
          },
          "appDVersion": {
            "$ref": "#/components/schemas/AppDVersion"
          },
          "checksum": {
            "$ref": "#/components/schemas/Checksum"
          },
          "softwareImages": {
            "$ref": "#/components/schemas/AppPkgSWImageInfo"
          },
          "additionalArtifacts": {
            "$ref": "#/components/schemas/AppPkgArtifactInfo"
          },
          "onboardingState": {
            "$ref": "#/components/schemas/OnboardingState"
          },
          "operationalState": {
            "$ref": "#/components/schemas/AppPkg.OperationalState"
          },
          "usageState": {
            "$ref": "#/components/schemas/UsageState"
          },
          "userDefinedData": {
            "$ref": "#/components/schemas/KeyValuePairs"
          },
          "_links": {
            "$ref": "#/components/schemas/AppPkgInfo.links"
          }
        }
      },
      "AppPkgInfoModifications": {
        "description": "'The data type represents the operational state for an application package resource'",
        "type": "object",
        "required": [
          "operationState"
        ],
        "properties": {
          "operationState": {
            "type": "string",
            "enum": [
              "DISABLED",
              "ENABLED"
            ]
          }
        }
      },
      "AppSoftwareVersion": {
        "description": "Software version of the application. This is updated when there is any change to the software in the onboarded application package.",
        "type": "string"
      },
      "AppPkg.OperationalState": {
        "description": "Operational state of the onboarded application package: Ã¢â‚¬Â¢ENABLED: the application package can be used for instantiation of new application instances. Ã¢â‚¬Â¢DISABLED: the application package cannot be used for further application instantiation requests.",
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "OnboardingState": {
        "description": "Onboarding state of application package",
        "type": "string",
        "format": "enum",
        "enum": [
          "CREATED",
          "UPLOADING",
          "PROCESSING",
          "ONBOARDED"
        ]
      },
      "UsageState": {
        "description": "Usage state of the onboarded instance of the application package",
        "type": "string",
        "format": "enum",
        "enum": [
          "IN_USE",
          "NOT_IN_USE"
        ]
      },
      "KeyValuePairs": {
        "description": "'This data type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of key-value pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 8259'",
        "type": "object",
        "additionalProperties": true
      },
      "AppPkgInfo.links": {
        "description": "Links to resources related to this resource.",
        "type": "object",
        "required": [
          "self",
          "appD",
          "appPkgContent"
        ],
        "properties": {
          "self": {
            "$ref": "#/components/schemas/LinkType"
          },
          "appD": {
            "$ref": "#/components/schemas/LinkType"
          },
          "appPkgContent": {
            "$ref": "#/components/schemas/LinkType"
          }
        }
      },
      "AppPkgNotification": {
        "description": "'This data type represents an application package management notification for informing the subscribers about onboarding application package resources. The notification is triggered when a new application package is onboarded'",
        "type": "object",
        "required": [
          "id",
          "notificationType",
          "subscriptionId",
          "timeStamp",
          "appPkgId",
          "appDId",
          "operationalState",
          "_links"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/AppPkgNotification.Id"
          },
          "notificationType": {
            "$ref": "#/components/schemas/AppPkg.NotificationType"
          },
          "subscriptionId": {
            "$ref": "#/components/schemas/SubscriptionId"
          },
          "timeStamp": {
            "$ref": "#/components/schemas/TimeStamp"
          },
          "appPkgId": {
            "$ref": "#/components/schemas/AppPkgId"
          },
          "appDId": {
            "$ref": "#/components/schemas/AppDId"
          },
          "operationalState": {
            "type": "string",
            "enum": [
              "DISABLED",
              "ENABLED"
            ]
          },
          "_links": {
            "$ref": "#/components/schemas/AppPkgNotification.links"
          }
        }
      },
      "AppPkgNotification.Id": {
        "description": "''",
        "type": "string"
      },
      "AppPkg.NotificationType": {
        "description": "Discriminator for the different notification types",
        "type": "string",
        "enum": [
          "AppPackageOnBoarded",
          "AppPacakgeEnabled",
          "AppPacakgeDisabled",
          "AppPackageDeleted"
        ]
      },
      "AppPkgNotification.links": {
        "description": "Links to resources related to this resource.",
        "type": "object",
        "required": [
          "subscription"
        ],
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/LinkType"
          }
        }
      },
      "AppPkgSWImageInfo": {
        "description": "Information of application software image in application package. Type is TBD"
      },
      "AppPkgSubscriptionInfo": {
        "description": "'The data type represents a subscription to notification of application package management for the onboarding, or operational state change of application package'",
        "type": "object",
        "required": [
          "id",
          "subscriptionType",
          "callbackUri",
          "_links"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/AppPkgSubscriptionInfo.Id"
          },
          "subscriptionType": {
            "$ref": "#/components/schemas/AppPkg.SubscriptionType"
          },
          "callbackUri": {
            "$ref": "#/components/schemas/CallbackUri"
          },
          "_links": {
            "$ref": "#/components/schemas/AppPkgSubscriptionInfo.links"
          }
        }
      },
      "AppPkgSubscriptionInfo.Id": {
        "description": "''",
        "type": "string"
      },
      "AppPkg.SubscriptionType": {
        "description": "Subscribed notification type.",
        "type": "string",
        "enum": [
          "AppPackageOnBoarding",
          "AppPacakgeOperationChange",
          "AppPackageDeletion"
        ]
      },
      "AppPkgSubscriptionInfo.links": {
        "description": "Links to resources related to this resource.",
        "type": "object",
        "required": [
          "self"
        ],
        "properties": {
          "self": {
            "$ref": "#/components/schemas/LinkType"
          }
        }
      },
      "AppPkgSubscriptionLinkList": {
        "description": "'The data type represents a subscription link list of notification on application package management'",
        "type": "object",
        "required": [
          "_links"
        ],
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/AppPkgSubscriptionLinkList.links"
          }
        }
      },
      "AppPkgSubscriptionLinkList.links": {
        "description": "Links to resources related to this resource.",
        "type": "object",
        "required": [
          "self"
        ],
        "properties": {
          "self": {
            "$ref": "#/components/schemas/LinkType"
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscriptions.AppPkgSubscription"
            }
          }
        }
      },
      "Subscriptions.AppPkgSubscription": {
        "description": "'The data type represents the input parameters of \"subscription operation\" to notification of application package management for the onboarding, or operational state change of application package.'",
        "type": "object",
        "required": [
          "href",
          "subsctiptionType"
        ],
        "properties": {
          "href": {
            "$ref": "#/components/schemas/Href"
          },
          "subsctiptionType": {
            "$ref": "#/components/schemas/SubsctiptionType.AppPkg"
          }
        }
      },
      "Href": {
        "description": "The URI referring to the subscription.",
        "type": "string",
        "format": "uri"
      },
      "AppPkgSubscription": {
        "description": "'The data type represents the input parameters of \"subscription operation\" to notification of application package management for the onboarding, or operational state change of application package.'",
        "type": "object",
        "required": [
          "callbackUri",
          "subsctiptionType"
        ],
        "properties": {
          "callbackUri": {
            "$ref": "#/components/schemas/CallbackUri"
          },
          "subsctiptionType": {
            "$ref": "#/components/schemas/SubsctiptionType.AppPkg"
          },
          "appPkgFilter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppPkgFilter"
            }
          }
        }
      },
      "SubsctiptionType.AppPkg": {
        "description": "'Subscribed notification type'",
        "type": "string",
        "enum": [
          "AppPackageOnBoarding",
          "AppPacakgeOperationChange",
          "AppPackageDeletion"
        ]
      },
      "AppPkgFilter": {
        "type": "string",
        "description": "The attribute-based filter is to filter application packages on which the query applies."
      },
      "ChangeAppInstanceStateOpConfig": {
        "description": "NFV",
        "type": "string"
      },
      "Checksum": {
        "description": "",
        "properties": {
          "algorithm": {
            "$ref": "#/components/schemas/Algorithm"
          },
          "hash": {
            "$ref": "#/components/schemas/Hash"
          }
        },
        "required": [
          "algorithm",
          "hash"
        ],
        "type": "object"
      },
      "CreateAppPkg": {
        "properties": {
          "appPkgName": {
            "description": "Name of the application package to be onboarded.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "appPkgPath": {
            "$ref": "#/components/schemas/URI"
          },
          "appPkgVersion": {
            "description": "Version of the application package to be onboarded.\nThe appPkgName with appPkgVersion can be used to uniquely identify the application package.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "appProvider": {
            "description": "The provider's name of the application package to be onboarded.",
            "type": "string",
            "x-etsi-mec-cardinality": "0..1",
            "x-etsi-mec-origin-type": "String"
          },
          "checksum": {
            "$ref": "#/components/schemas/Checksum"
          },
          "userDefinedData": {
            "$ref": "#/components/schemas/KeyValuePairs"
          }
        },
        "required": [
          "appPkgName",
          "appPkgVersion",
          "checksum",
          "appPkgPath"
        ],
        "type": "object",
        "x-etsi-notes": "NOTE:\tIt is for further study how to convey appPkgPath, and align with ETSI GS NFV-SOL 005 [i.7].",
        "x-etsi-ref": "6.2.3.2"
      },
      "DNSRuleDescriptor": {
        "properties": {
          "dnsRuleId": {
            "description": "Identifies the DNS Rule",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "domainName": {
            "description": "FQDN of the DNS rule",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "ipAddress": {
            "description": "IP address given by the DNS rule",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "ipAddressType": {
            "$ref": "#/components/schemas/IpAddressType"
          },
          "ttl": {
            "description": "Time-to-live value",
            "type": "integer",
            "x-etsi-mec-cardinality": "0..1",
            "x-etsi-mec-origin-type": "Int"
          }
        },
        "required": [
          "dnsRuleId",
          "domainName",
          "ipAddressType",
          "ipAddress"
        ],
        "type": "object",
        "x-etsi-ref": "6.2.1.13"
      },
      "IpAddressType": {
        "description": "Specifies the IP address type",
        "type": "string",
        "enum": [
          "IP_V6",
          "IP_V4"
        ]
      },
      "FeatureDependency": {
        "properties": {
          "featureName": {
            "description": "The name of the feature, for example, UserApps, UEIdentity, etc.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "version": {
            "description": "The version of the feature.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          }
        },
        "required": [
          "featureName",
          "version"
        ],
        "type": "object",
        "x-etsi-ref": "6.2.1.8"
      },
      "Hash": {
        "description": "'String 1 The hexadecimal value of the checksum'",
        "type": "string"
      },
      "InterfaceDescriptor": {
        "properties": {
          "dstIPAddress": {
            "description": "If the interface type is IP, the destination address identifies the IP address of the destination. Only used for dstInterface.",
            "type": "string",
            "x-etsi-mec-cardinality": "0..1",
            "x-etsi-mec-origin-type": "String"
          },
          "dstMACAddress": {
            "description": "If the interface type is MAC, the destination address identifies the MAC address of the destination. Only used for dstInterface.",
            "type": "string",
            "x-etsi-mec-cardinality": "0..1",
            "x-etsi-mec-origin-type": "String"
          },
          "interfaceType": {
            "$ref": "#/components/schemas/InterfaceType"
          },
          "srcMACAddress": {
            "description": "If the interface type is MAC, the source address identifies the MAC address of the interface.",
            "type": "string",
            "x-etsi-mec-cardinality": "0..1",
            "x-etsi-mec-origin-type": "String"
          },
          "tunnelInfo": {
            "$ref": "#/components/schemas/TunnelInfo"
          }
        },
        "required": [
          "interfaceType"
        ],
        "type": "object",
        "x-etsi-ref": "6.2.1.11"
      },
      "InterfaceType": {
        "description": "Type of interface.",
        "type": "string",
        "enum": [
          "TUNNEL",
          "MAC",
          "IP"
        ]
      },
      "LatencyDescriptor": {
        "properties": {
          "maxLatency": {
            "description": "The value of the maximum latency in nano seconds tolerated by the MEC application. See note.",
            "format": "Uint32",
            "type": "integer",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "Uint32"
          }
        },
        "required": [
          "maxLatency"
        ],
        "type": "object",
        "x-etsi-notes": "NOTE:\tThe latency is considered to be the one way end-to-end latency between the client application (e.g. in a device) and the service (i.e. the MEC Application instance).",
        "x-etsi-ref": "6.2.1.14"
      },
      "LinkType": {
        "properties": {
          "href": {
            "description": "URI referring to a resource",
            "format": "uri",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "URI"
          }
        },
        "required": [
          "href"
        ],
        "type": "object",
        "x-etsi-ref": "6.5.2"
      },
      "ProblemDetails": {
        "properties": {
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "type": "string",
            "x-etsi-mec-cardinality": "0..1",
            "x-etsi-mec-origin-type": "String"
          },
          "instance": {
            "description": "A URI reference that identifies the specific occurrence of the problem",
            "format": "uri",
            "type": "string",
            "x-etsi-mec-cardinality": "0..1",
            "x-etsi-mec-origin-type": "URI"
          },
          "status": {
            "description": "The HTTP status code for this occurrence of the problem",
            "format": "uint32",
            "type": "integer",
            "x-etsi-mec-cardinality": "0..1",
            "x-etsi-mec-origin-type": "Uint32"
          },
          "title": {
            "description": "A short, human-readable summary of the problem type",
            "type": "string",
            "x-etsi-mec-cardinality": "0..1",
            "x-etsi-mec-origin-type": "String"
          },
          "type": {
            "description": "A URI reference according to IETF RFC 3986 that identifies the problem type",
            "format": "uri",
            "type": "string",
            "x-etsi-mec-cardinality": "0..1",
            "x-etsi-mec-origin-type": "URI"
          }
        },
        "type": "object"
      },
      "SerializerTypes": {
        "type": "string"
      },
      "ServiceDependency": {
        "properties": {
          "requestedPermissions": {
            "description": "Requested permissions regarding the access of the application to the service. See clause 8.2 of ETSI GS MEC 009 [4].\nThe format of this attribute is left for the data model design stage.",
            "items": {
              "$ref": "#/components/schemas/Not_specified"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "Not_specified"
          },
          "serCategory": {
            "$ref": "#/components/schemas/CategoryRef"
          },
          "serName": {
            "description": "The name of the service, for example, RNIS, LocationService, etc.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "serTransportDependencies": {
            "description": "Indicates transport and serialization format dependencies of consuming the service. Defaults to REST + JSON if absent. See note.",
            "items": {
              "$ref": "#/components/schemas/TransportDependency"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "TransportDependency"
          },
          "version": {
            "description": "The version of the service.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          }
        },
        "required": [
          "serName",
          "version"
        ],
        "type": "object",
        "x-etsi-notes": "NOTE:\tThis attribute indicates groups of transport bindings that a service-consuming MEC application supports for the consumption of the MEC service defined by this ServiceDependency structure. If at least one of the indicated groups is supported by the service it may be consumed by the application.",
        "x-etsi-ref": "6.2.1.17"
      },
      "ServiceDescriptor": {
        "description": "'The ServiceDescriptor data type describes a MEC service produced by a service-providing MEC application.'",
        "type": "object",
        "required": [
          "serName",
          "version"
        ],
        "properties": {
          "serName": {
            "$ref": "#/components/schemas/SerName"
          },
          "serCategory": {
            "$ref": "#/components/schemas/CategoryRef"
          },
          "version": {
            "$ref": "#/components/schemas/SerVersion"
          },
          "transportsSupported": {
            "$ref": "#/components/schemas/TransportsSupported"
          }
        }
      },
      "SerName": {
        "description": "The name of the service, for example, RNIS, LocationService, etc.",
        "type": "string"
      },
      "SerVersion": {
        "description": "The version of the service.",
        "type": "string"
      },
      "TransportsSupported": {
        "description": "'Indicates transports and serialization formats supported made available to the service-consuming application. Defaults to REST + JSON if absent.'",
        "type": "object",
        "required": [
          "featureName",
          "version"
        ],
        "properties": {
          "transport": {
            "$ref": "#/components/schemas/TransportDescriptor"
          },
          "serializers": {
            "$ref": "#/components/schemas/Serializers"
          }
        }
      },
      "Serializers": {
        "description": "'Information about the serializers in this binding, as defined in the SerializerTypes type in ETSI GS MEC 011 '",
        "type": "array",
        "minItems": 1,
        "items": {
          "$ref": "#/components/schemas/SerializerTypes"
        }
      },
      "SwImageDescriptor": {
        "description": "Ref NFV",
        "type": "string"
      },
      "TerminateAppInstanceOpConfig": {
        "description": "NFV",
        "type": "string",
        "x-etsi-ref": "6.2.2.9"
      },
      "TimeStamp": {
        "properties": {
          "nanoSeconds": {
            "description": "The nanoseconds part of the Time. Time is defined as Unix-time since January 1, 1970, 00:00:00 UTC.",
            "format": "Uint32",
            "type": "integer",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "Uint32"
          },
          "seconds": {
            "description": "The seconds part of the Time. Time is defined as Unix-time since January 1, 1970, 00:00:00 UTC.",
            "format": "Uint32",
            "type": "integer",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "Uint32"
          }
        },
        "required": [
          "seconds",
          "nanoSeconds"
        ],
        "type": "object",
        "x-etsi-ref": "6.2.5.4"
      },
      "TrafficFilter": {
        "properties": {
          "dSCP": {
            "description": "Used to match all IPv4 packets that have the same DSCP.",
            "type": "integer",
            "x-etsi-mec-cardinality": "0..1",
            "x-etsi-mec-origin-type": "Int"
          },
          "dstAddress": {
            "description": "A IP address or a range of IP addresses.For IPv4, the IP address could be an IP address plus mask, or an individual IP address, or a range of IP addresses.For IPv6, the IP address could be an IP prefix, or a range of IP prefixes.",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "String"
          },
          "dstPort": {
            "description": "A port or a range of ports.",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "String"
          },
          "dstTunnelPort": {
            "description": "Used for GTP tunnel based traffic rule.",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "String"
          },
          "protocol": {
            "description": "Specify the protocol of the traffic filter.",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "String"
          },
          "qCI": {
            "description": "Used to match all packets that have the same QCI.",
            "type": "integer",
            "x-etsi-mec-cardinality": "0..1",
            "x-etsi-mec-origin-type": "Int"
          },
          "srcAddress": {
            "description": "An IP address or a range of IP addresses.For IPv4, the IP address could be an IP address plus mask, or an individual IP address, or a range of IP addresses.For IPv6, the IP address could be an IP prefix, or a range of IP prefixes.",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "String"
          },
          "srcPort": {
            "description": "A port or a range of ports.",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "String"
          },
          "srcTunnelAddress": {
            "description": "Used for GTP tunnel based traffic rule.",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "String"
          },
          "srcTunnelPort": {
            "description": "Used for GTP tunnel based traffic rule.",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "String"
          },
          "tC": {
            "description": "Used to match all IPv6 packets that have the same TC.",
            "type": "integer",
            "x-etsi-mec-cardinality": "0..1",
            "x-etsi-mec-origin-type": "Int"
          },
          "tag": {
            "description": "Used for tag based traffic rule.",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "String"
          },
          "tgtTunnelAddress": {
            "description": "Used for GTP tunnel based traffic rule.",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "type": "array",
            "x-etsi-mec-cardinality": "0..N",
            "x-etsi-mec-origin-type": "String"
          }
        },
        "type": "object",
        "x-etsi-ref": "6.2.1.10"
      },
      "TrafficRuleDescriptor": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "dstInterface": {
            "type": "array",
            "minItems": 0,
            "maxItems": 2,
            "items": {
              "$ref": "#/components/schemas/InterfaceDescriptor"
            }
          },
          "filterType": {
            "$ref": "#/components/schemas/FilterType"
          },
          "priority": {
            "description": "Priority of this traffic rule. If traffic rule conflicts, the one with higher priority take precedence.",
            "type": "integer",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "Int"
          },
          "trafficFilter": {
            "description": "The filter used to identify specific flow/packets that need to be handled by the MEC host.",
            "items": {
              "$ref": "#/components/schemas/TrafficFilter"
            },
            "minItems": 1,
            "type": "array",
            "x-etsi-mec-cardinality": "1..N",
            "x-etsi-mec-origin-type": "TrafficFilter"
          },
          "trafficRuleId": {
            "description": "Identifies the traffic rule.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          }
        },
        "required": [
          "trafficRuleId",
          "filterType",
          "priority",
          "trafficFilter",
          "action"
        ],
        "type": "object",
        "x-etsi-ref": "6.2.1.9"
      },
      "Action": {
        "description": "'Identifies the action of the MEC host data plane, when a packet matches the trafficFilter.'",
        "type": "string",
        "enum": [
          "DROP",
          "FORWARD_DECAPSULATED",
          "FORWARD_AS_IS",
          "PASSTHROUGH",
          "DUPLICATED_DECAPSULATED",
          "DUPLICATE_AS_IS"
        ]
      },
      "FilterType": {
        "description": "Definition of filter type: per FLOW or PACKET",
        "type": "string",
        "enum": [
          "FLOW",
          "PACKET"
        ]
      },
      "TransportDependency": {
        "properties": {
          "labels": {
            "description": "Set of labels that allow to define groups of transport bindings. The mechanism of the grouping is defined below this table.",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "x-etsi-mec-cardinality": "1..N",
            "x-etsi-mec-origin-type": "String"
          },
          "serializers": {
            "description": "Information about the serializers in this transport binding, as defined in the SerializerTypes type in ETSI GS MEC 011 [i.4]. Support for at least one of the entries is required in conjunction with the transport.",
            "items": {
              "$ref": "#/components/schemas/SerializerTypes"
            },
            "minItems": 1,
            "type": "array",
            "x-etsi-mec-cardinality": "1..N",
            "x-etsi-mec-origin-type": "SerializerTypes"
          },
          "transport": {
            "$ref": "#/components/schemas/TransportDescriptor"
          }
        },
        "required": [
          "transport",
          "serializers",
          "labels"
        ],
        "type": "object",
        "x-etsi-ref": "6.2.1.18"
      },
      "TransportDescriptor": {
        "properties": {
          "protocol": {
            "description": "The name of the protocol used. Shall be set to HTTP for a REST API.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "security": {
            "$ref": "#/components/schemas/SecurityInfo"
          },
          "type": {
            "$ref": "#/components/schemas/TransportTypes"
          },
          "version": {
            "description": "The version of the protocol used.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          }
        },
        "required": [
          "type",
          "protocol",
          "version",
          "security"
        ],
        "type": "object",
        "x-etsi-ref": "6.2.1.19"
      },
      "TransportTypes": {
        "type": "string"
      },
      "TunnelInfo": {
        "properties": {
          "tunnelDstAddress": {
            "description": "Destination address of the tunnel.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "tunnelSpecificData": {
            "$ref": "#/components/schemas/Not_specified"
          },
          "tunnelSrcAddress": {
            "description": "Source address of the tunnel.",
            "type": "string",
            "x-etsi-mec-cardinality": "1",
            "x-etsi-mec-origin-type": "String"
          },
          "tunnelType": {
            "$ref": "#/components/schemas/TunnelType"
          }
        },
        "required": [
          "tunnelType",
          "tunnelDstAddress",
          "tunnelSrcAddress"
        ],
        "type": "object",
        "x-etsi-ref": "6.2.1.12"
      },
      "TunnelType": {
        "description": "Type of tunnel.",
        "type": "string",
        "enum": [
          "GTP-U",
          "GRE"
        ]
      },
      "VirtualComputeDescription": {
        "description": "Ref NFV",
        "type": "string"
      },
      "VirtualNetworkInterfaceRequirements": {
        "type": "string"
      },
      "VirtualStorageDescriptor": {
        "description": "Ref NFV",
        "type": "string"
      },
      "SecurityInfo": {
        "description": "See MEC011"
      },
      "CategoryRef": {
        "description": "See MEC011"
      },
      "URI": {
        "type": "string"
      },
      "Not_specified": {
        "type": "string"
      }
    },
    "responses": {
      "204": {
        "description": "No Content"
      },
      "206": {
        "description": "Partial content"
      },
      "400": {
        "description": "Bad Request : used to indicate that incorrect parameters were passed to the request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized :  used when the client did not submit credentials.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden :  operation is not allowed given the current status of the resource.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "404": {
        "description": "Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "406": {
        "description": "Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "409": {
        "description": "Conflict : The operation cannot be executed currently, due to a conflict with the state of the resource",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "412": {
        "description": "Precondition failed :  used when a condition has failed during conditional requests, e.g. when using ETags to avoid write conflicts when using PUT",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "414": {
        "description": "URI Too Long : used to indicate that the server is refusing to process the request because the request URI is longer than the server is willing or able to process.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "415": {
        "description": "Unsupported Media Type :  used to indicate that the server or the client does not support the content type of the entity body.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "416": {
        "description": "Range Not Satisfiable ."
      },
      "422": {
        "description": "Unprocessable Entity : used to indicate that the server understands the content type of the request entity and that the syntax of the request entity is correct but that the server is unable to process the contained instructions. This error condition can occur if an JSON request body is syntactically correct but semantically incorrect, for example if the target area for the request is considered too large. This error condition can also occur if the capabilities required by the request are not supported.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "application/problem+json": {
                "problemDetails": {
                  "type": "https://meAppServer.example.com/rni/v2/probs/too-many targets",
                  "title": "Too many targets",
                  "status": "422",
                  "detail": "The target area for the request is considered too large",
                  "instance": "/meAppClient.example.com/77777/msgs/abc"
                }
              }
            }
          }
        }
      },
      "429": {
        "description": "Too Many Requests : used when a rate limiter has triggered.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            }
          }
        }
      },
      "AppPkgContent.200": {
        "description": "The payload body shall contain a copy of the file representing the AppD or a ZIP file that contains the file or multiple files representing the AppD."
      }
    }
  }
}