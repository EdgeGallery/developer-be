#图片文字识别
##POST 通用文档识别
###功能介绍
OCR 接口服务主要用于识别文件中的文字，输入为图片的base64 编码，图片编码后不超过10MB，接口返回图片中的文字内容和文字的位置信息。
####请求消息
```
URI: /ecloud/ai/v1/ocr/v1/generic
Method: POST
```

**请求参数说明**

| 参数名称  | 参数类型  | 是否必须  | 参数说明  |
| ------------ | ------------ | ------------ | ------------ |
| imageFile  |  string | 是 | 图片的base64 编码，不包含头部格式信息 |

**请求参考示例**
```
{
	"imageFile":"test_image_base64_content"
}
```

####响应消息
**响应参数说明**

| 参数名称  |   参数类型| 参数描述  |
| ------------ | ------------ | ------------ |
| content  | Object  | 识别的文字内容  |
| +prism_wnum  | Integer  | 一共识别出的文字的行数  |
| +prisim_wordsInfo | Array  | 每一行文字的识别的具体结果  |
| ++position  | Array  | 文本行的位置信息  |
| +++x  | Integer  | 水平方向坐标  |
| +++y  | Integer  | 垂直方向坐标  |
| ++prob  | Float  | 文本行置信度  |
| ++word  | String  | 文本行内容  |
| ++chars  | Array  | 文本行中每个字符的详细信息  |
| +++pos  | Array  | 每个字符的位置信息  |
| ++++x  | Integer  | 每个字符的水平方向坐标  |
| ++++y  | Integer  | 每个字符的垂直方向坐标  |
| +++confidence  | Float  | 每个字符的置信度  |
| +++char  | String  | 字符内容  |

**响应参考示例**
```
{
	"state" : "OK",
	"requestId" : "87654286ab74e479",
	"body" : {
		"content" : {
			"prism_wnum" : 1,
			"prism_wordsInfo" : [{
					"prob" : 1.017492413520813,
					"position" : [{
							"x" : 86,
							"y" : 99
						}, {
							"x" : 405,
							"y" : 96
						}, {
							"x" : 405,
							"y" : 152
						}, {
							"x" : 86,
							"y" : 154
						}
					],
					"word" : "文字透",
					"chars" : [{
							"pos" : [{
									"x" : 402,
									"y" : 152
								}, {
									"x" : 377,
									"y" : 152
								}, {
									"x" : 377,
									"y" : 96
								}, {
									"x" : 402,
									"y" : 96
								}
							],
							"confidence" : 0.9991480112075806,
							"char" : "文"
						}, {
							"pos" : [{
									"x" : 360,
									"y" : 152
								}, {
									"x" : 307,
									"y" : 153
								}, {
									"x" : 307,
									"y" : 97
								}, {
									"x" : 360,
									"y" : 97
								}
							],
							"confidence" : 0.999923586845398,
							"char" : "字"
						}, {
							"pos" : [{
									"x" : 312,
									"y" : 153
								}, {
									"x" : 258,
									"y" : 153
								}, {
									"x" : 258,
									"y" : 97
								}, {
									"x" : 312,
									"y" : 97
								}
							],
							"confidence" : 0.9999978542327881,
							"char" : "透"
						}
					]
				}
			]
		}
	}
}
```

**响应错误码**

| 编号  | 错误码  | 错误信息  | 说明  |
| ------------ | ------------ | ------------ | ------------ |
| 1  | ParameterError  | 请求参数有误  | 1、imageFile 参数不携带；<br>2、imageFile 输入错误；<br>3、imageFile 非base64 编码；<br>4、imageFile 非图片的base64 编码  |
| 2  | InternalError  | 内部错误  | 1、网络、算法地址错误等原因造成算法无法请求<br>2、算法返回结果为空<br>3、算法内部错误，没有正常识别<br>4、算法请求超时  |
| 3  | TooLargeFileError  | 输入文件过大  | imageFile 的base64 编码超过10M  |
| 4  | DetectError  | 未检测出有效图片  | imageFile 为不包含检测目标的图片  |

##POST 火车票识别
###功能介绍
火车票识别服务接口用于识别火车票信息，输入为图片的base64 编码，结构化输出火车票信息，输出字段包括：票号、检票口、出发地、目的地、车次、发车时间、乘车日期、价格、售票地点、车票编码、席别、姓名、身份证号等信息。图片编码后的大小不超过10MB。
####请求消息
```
URI: /ecloud/ai/v1/ocr/v1/trainticket
Method: POST
```

**请求参数说明**

|参数名称   | 参数类型  |  是否必须 | 参数说明  |
| ------------ | ------------ | ------------ | ------------ |
| imageFile  |  string |  是 |  图片的base64 编码，不包含头部格式信息 |

**请求参考示例**
```
{
	"imageFile":"test_image_base64_content"
}
```

####响应消息
**响应参数说明**

| 参数名称  |   参数类型| 参数描述  |
| ------------ | ------------ | ------------ |
| ticketNum  | string  | 票号。若无或者未识别则返回空字符串  |
| ticketGate  | string  | 检票口。若无或者未识别则返回空字符串  |
| startingStation | string  | 出发地。若无或者未识别则返回空字符串  |
| destinationStation  | string  | 目的地。若无或者未识别则返回空字符串  |
| trainNum  | string  | 车次。若无或者未识别则返回空字符串  |
| time  | string  | 发车时间。若无或者未识别则返回空字符串  |
| date  | string  | 发车日期。若无或者未识别则返回空字符串  |
| ticketRates  | string  | 票价。若无或者未识别则返回空字符串  |
| ticketLocation  | string  | 售票地点。若无或者未识别则返回空字符串  |
| ticketCode  | string  | 车票编码。若无或者未识别则返回空字符串  |
| seatCategory  | string  | 座次。若无或者未识别则返回空字符串  |
| name  | string  | 姓名。若无或者未识别则返回空字符串  |
| idNumber  | string  | 身份证号。若无或者未识别则返回空字符串  |

**响应参考示例**
```
{
	"requestId": "reqId-b1f30da92093413f9deee1dd4143ee89",
	"state": "OK",
	"body": {
		"date": "2019-09-30",
		"startingStation": "许昌站",
		"ticketRates": "12.5",
		"idNumber": "3489999000****5000",
		"ticketLocation": "苏州售",
		"trainNum": "K313",
		"ticketGate": "",
		"ticketNum": "",
		"seatCategory": "二等座",
		"name": "荀珂",
		"time": "23:03",
		"destinationStation": "廊成站",
		"ticketCode": "3053089974441K039695"
	}
}
```

**响应错误码**

| 编号  | 错误码  | 错误信息  | 说明  |
| ------------ | ------------ | ------------ | ------------ |
| 1  | ParameterError  | 请求参数有误  | 1、imageFile 参数不携带；<br>2、imageFile 输入错误；<br>3、imageFile 非base64 编码；<br>4、imageFile 非图片的base64 编码  |
| 2  | InternalError  | 内部错误  | 1、网络、算法地址错误等原因造成算法无法请求<br>2、算法返回结果为空<br>3、算法内部错误，没有正常识别<br>4、算法请求超时  |
| 3  | TooLargeFileError  | 输入文件过大  | imageFile 的base64 编码超过10M  |
| 4  | DetectError  | 未检测出有效图片  | imageFile 为不包含检测目标的图片  |

##POST 增值税发票识别
###功能介绍
识别增值税发票中的文字，输入为图片的base64 编码，输出为图片中相关字段的文字信息。图片编码后的大小不超过10MB。
####请求消息
```
URI: /ecloud/ai/v1/ocr/v1/invoice
Method: POST
```

**请求参数说明**

| 参数名称  | 参数类型  | 是否必须  | 参数说明  |
| ------------ | ------------ | ------------ | ------------ |
| imageFile  | string  | 是  | 图片的base64 编码，不包含头部格式信息  |

请求参考示例
```
{
	"imageFile":"test_image_base64_content"
}
```

####响应消息
**响应参数说明**

| 参数名称  | 参数类型  | 参数描述  |
| ------------ | ------------ | ------------ |
| invoiceCode  | string  | 发票代码  |
| invoiceNumber  | string  | 发票号码  |
| invoiceDate  | string  | 开票日期  |
| taxAmount  | string  | 税额  |
| amountWithoutTax  | string  | 不含税金额  |
| amount  | string  | 金额  |
| buyerName  | string  | 购买方名称  |
| buyerTaxNumber  | string  | 购买方税号  |
| buyerAddressAndPhone  | string  | 购买方地址和电话  |
| buyerBankAndAccount  | string  | 购买方银行和账号  |
| sellerName  | string  | 销售方名称  |
| sellerTaxNumber  | string  | 销售方税号  |
| sellerAddressAndPhone  | string  | 销售方地址和电话  |
| sellerBankAndAccount  | string  | 销售方银行和账号  |

**响应参考示例**
```
{
	"requestId": "reqId-6075e4a121e143e6879c27d431933e50",
	"state": "OK",
	"body": {
		"sellerBankAndAccount": "招商银行股份有限公司天津自由贸易试验区分行122905939910401",
		"amountWithoutTax": "509.63",
		"amount": "524.92",
		"sellerName": "9118777773307",
		"sellerAddressAndPhone": "天津经济技术开发区南港工业区综合服务区办公楼C 座103 室12 单元022-59002850",
		"invoiceDate": "2019 年07 月05 日",
		"buyerName": "",
		"invoiceCode": "012001800311",
		"buyerAddressAndPhone": "",
		"invoiceNumber": "69310144",
		"buyerBankAndAccount": "",
		"taxAmount": "15.29",
		"sellerTaxNumber": "911201788888307",
		"buyerTaxNumber": "91320505098777783X7"
	}
}
```

**响应错误码**

| 编号  | 错误码  | 错误信息  | 说明  |
| ------------ | ------------ | ------------ | ------------ |
| 1  | ParameterError  | 请求参数有误  | 1、imageFile 参数不携带；<br></br2、imageFile>2、imageFile 输入错误；<br>3、imageFile 非base64 编码；<br>4、imageFile 非图片的base64 编码  |
| 2  | InternalError  | 内部错误  | 1、网络、算法地址错误等原因造成算法无法请求<br>2、算法返回结果为空<br>3、算法内部错误，没有正常识别<br>4、算法请求超时  |
| 3  | TooLargeFileError  | 输入文件过大  | imageFile 的base64 编码超过10M  |
| 4  | DetectError  | 未检测出有效图片  | imageFile 为不包含检测目标的图片  |

##网络文字图片识别
###功能介绍
网络图片识别服务主要用微博图片中的文字，输入参数为图片的base64 编码，输出为图片中的相关字段的文字信息。本接口隶属于通用文字识别产品。图片编码后的大小不超过10MB。
####请求消息
```
URI: /ecloud/ai/v1/ocr/v1/webimage
Method: POST
```

**请求参数说明**

|参数名称   | 参数类型  |  是否必须 | 参数说明  |
| ------------ | ------------ | ------------ | ------------ |
| imageFile  |  string |  是 |  图片的base64 编码，不包含头部格式信息 |

请求参考示例
```
{
	"imageFile":"test_image_base64_content"
}
```

####响应消息
**响应参数说明**

| 参数名称  |   参数类型| 参数描述  |
| ------------ | ------------ | ------------ |
| content  | Object  | 识别的文字内容  |
| +prism_wnum  | Integer  | 一共识别出的文字的行数  |
| +prisim_wordsInfo | Array  | 每一行文字的识别的具体结果  |
| ++position  | Array  | 文本行的位置信息  |
| +++x  | Integer  | 水平方向坐标  |
| +++y  | Integer  | 垂直方向坐标  |
| ++prob  | Float  | 文本行置信度  |
| ++word  | String  | 文本行内容  |
| ++chars  | Array  | 文本行中每个字符的详细信息  |
| +++pos  | Array  | 每个字符的位置信息  |
| ++++x  | Integer  | 每个字符的水平方向坐标  |
| ++++y  | Integer  | 每个字符的垂直方向坐标  |
| +++confidence  | Float  | 每个字符的置信度  |
| +++char  | String  | 字符内容  |

**响应参考示例**
同通用文档识别的响应参考示例。

**响应错误码**

| 编号  | 错误码  | 错误信息  | 说明  |
| ------------ | ------------ | ------------ | ------------ |
| 1  | ParameterError  | 请求参数有误  | 1、imageFile 参数不携带；<br>2、imageFile 输入错误；<br>3、imageFile 非base64 编码；<br>4、imageFile 非图片的base64 编码  |
| 2  | InternalError  | 内部错误  | 1、网络、算法地址错误等原因造成算法无法请求<br>2、算法返回结果为空<br>3、算法内部错误，没有正常识别<br>4、算法请求超时  |
| 3  | TooLargeFileError  | 输入文件过大  | imageFile 的base64 编码超过10M  |
| 4  | DetectError  | 未检测出有效图片  | imageFile 为不包含检测目标的图片  |

##印章检测
###功能介绍
印章检测产品主要检测图片中是否印章及印章的位置信息，接口输入为图片的base64 编码信息，输出为图片的印章位置信息。本接口隶属于资产类识别产品。图片编码后的大小不超过10MB。
####请求消息
```
URI: /ecloud/ai/v1/ocr/v1/seal
Method: POST
```

**请求参数说明**

|参数名称   | 参数类型  |  是否必须 | 参数说明  |
| ------------ | ------------ | ------------ | ------------ |
| imageFile  |  string |  是 |  图片的base64 编码，不包含头部格式信息 |

**请求参考示例**
```
{
	"imageFile":"test_image_base64_content"
}
```

####响应消息
**响应参数说明**
| 名称  | 类型  | 描述  |
| ------------ | ------------ | ------------ |
| txt  | String  | 印章内容  |

**响应参考示例**
```
{
  "requestId": "test_request_id",
  "state": "OK",
  "body": {
    "text": "深圳市龙岗派出所"
  }
}
```
**响应错误码**

| 编号  | 错误码  | 错误信息  | 说明  |
| ------------ | ------------ | ------------ | ------------ |
| 1  | ParameterError  | 请求参数有误  | 1、imageFile 参数不携带；<br>2、imageFile 输入错误；<br>3、imageFile 非base64 编码；<br>4、imageFile 非图片的base64 编码  |
| 2  | InternalError  | 内部错误  | 1、网络、算法地址错误等原因造成算法无法请求<br>2、算法返回结果为空<br>3、算法内部错误，没有正常识别<br>4、算法请求超时  |
| 3  | TooLargeFileError  | 输入文件过大  | imageFile 的base64 编码超过10M  |
| 4  | DetectError  | 未检测出有效图片  | imageFile 为不包含检测目标的图片  |

##身份证识别
###功能介绍
身份证识别接口主要用于识别身份证图像信息。接口输入为图片的base64 编码信息，结构化输出识别信息，包括：姓名、性别、民族、出生日期、地址、身份证号码、签发机关、有效期限等信息。本接口隶属于卡证识别产品。图片编码后的大小不超过10MB。
####请求消息
```
URI: /ecloud/ai/v1/ocr/v1/idcard
Method: POST
```

**请求参数说明**

|参数名称   | 参数类型  |  是否必须 | 参数说明  |
| ------------ | ------------ | ------------ | ------------ |
| imageFile  |  string |  是 |  图片的base64 编码，不包含头部格式信息 |

**请求参考示例**
```
{
	"imageFile":"test_image_base64_content"
}
```

####响应消息
**响应参数说明**

| 名称  | 类型  | 描述  |
| ------------ | ------------ | ------------ |
| name  | String  | 姓名信息  |
| sex  | String  | 性别信息  |
| ethnicity  | String  | 民族信息  |
| birth  | String  | 出生日期  |
| address  | String  | 住址信息  |
| id  | String  | 身份证号码信息  |
| authority  | String  | 签发机关信息  |
| validPeriod  | String  | 有效期限信息  |

**响应参考示例**
```
{
  "requestId": "test_request_id",
  "state": "OK",
  "body": {
    "name": "张三",
    "sex": "男",
    "ethnicity": "汉族",
    "birth": "2000.1.1",
    "address": "深圳",
    "id": "111111111111111111",
    "authority": "深圳市派出所",
    "validPeriod": "2025.1.1"
  }
}
```

**响应错误码**

| 编号  | 错误码  | 错误信息  | 说明  |
| ------------ | ------------ | ------------ | ------------ |
| 1  | ParameterError  | 请求参数有误  | 1、imageFile 参数不携带；<br>2、imageFile 输入错误；<br>3、imageFile 非base64 编码；<br>4、imageFile 非图片的base64 编码  |
| 2  | InternalError  | 内部错误  | 1、网络、算法地址错误等原因造成算法无法请求<br>2、算法返回结果为空<br>3、算法内部错误，没有正常识别<br>4、算法请求超时  |
| 3  | TooLargeFileError  | 输入文件过大  | imageFile 的base64 编码超过10M  |
| 4  | DetectError  | 未检测出有效图片  | imageFile 为不包含检测目标的图片  |

##营业执照识别
###功能介绍
营业执照识别接口用于是被营业执照的图像信息，接口输入为图片的base64 编码信息，接口输出为营业执照的格式化信息，输出字段包括：编号、注册号、统一社会信用代码、名称、公司类型、住所、法定代表人姓名、注册资本、实收资本、成立日期、营业期限、有效期、经营范围等信息。该接口隶属于卡证识别产品。图片编码后的大小不超过10MB。
####请求消息
```
URI: /ecloud/ai/v1/ocr/v1/businesslicense
Method: POST
```

**请求参数说明**

|参数名称   | 参数类型  |  是否必须 | 参数说明  |
| ------------ | ------------ | ------------ | ------------ |
| imageFile  |  string |  是 |  图片的base64 编码，不包含头部格式信息 |

**请求参考示例**
```
{
	"imageFile":"test_image_base64_content"
}
```

####响应消息
**响应参数说明**

| 名称  | 类型  | 描述  |
| ------------ | ------------ | ------------ |
| NO  | String  | 证件编号信息  |
| registered_number  | String  | 注册号信息  |
| credit_code  | String  | 社会信用代码  |
| enterprise_name  | String  | 公司名称  |
| legal_representative  | String  | 法定代表人  |
| enterprise_type  | String  | 主体类型  |
| enterprise_address  | String  | 地址信息  |
| registered_capital  | String  | 注册资本信息  |
| paid-in_capital  | String  | 实收资本信息  |
| establish_date  | String  | 成立日期  |
| operation_period  | String  | 营业期限信息  |
| expire_date  | String  | 有效期信息  |
| business_scope  | String  | 经营范围信息  |

**响应参考示例**
```
{
	"state": "OK",
	"requestId": "test_request_id",
	"body": {
		"enterprise_type": "一人有限责任公司（自然人独资）",
		"NO": "",
		"legal_representative": "某某某",
		"registered_capital": "10000000 万元",
		"enterprise_address": "某某省某莱市某某县某某乡",
		"business_scope": "",
		"paid-in_capital": "",
		"operation_period": "2015 年11 月15 日至2019 年11 月15 日",
		"expire_date": "2019 年12 月24 日",
		"credit_code": "",
		"establish_date": "2015 年11 月15 日",
		"enterprise_name": "某某某投资管理有限公司",
		"registered_number": "3142526366212"
	}
}
```

**响应错误码**

| 编号  | 错误码  | 错误信息  | 说明  |
| ------------ | ------------ | ------------ | ------------ |
| 1  | ParameterError  | 请求参数有误  | 1、imageFile 参数不携带；<br>2、imageFile 输入错误；<br>3、imageFile 非base64 编码；<br>4、imageFile 非图片的base64 编码  |
| 2  | InternalError  | 内部错误  | 1、网络、算法地址错误等原因造成算法无法请求<br>2、算法返回结果为空<br>3、算法内部错误，没有正常识别<br>4、算法请求超时  |
| 3  | TooLargeFileError  | 输入文件过大  | imageFile 的base64 编码超过10M  |
| 4  | DetectError  | 未检测出有效图片  | imageFile 为不包含检测目标的图片  |

##POST 车牌识别
###功能介绍
车牌识别服务接口主要用于识别汽车牌照图像信息。提供了API 接入方式，输入jpg、jpeg、png、bmp 格式图片的base64 编码，结构化输出车牌信息。输出字段包括：牌照号码、牌照类型等信息。该接口隶属于汽车类识别产品。图片编码后的大小不超过2MB。
####请求消息
```
URI: /ecloud/ai/v1/ocr/v1/ licenseplate
Method: POST
```

**请求参数说明**

|参数名称   | 参数类型  |  是否必须 | 参数说明  |
| ------------ | ------------ | ------------ | ------------ |
| imageFile  |  string |  是 |  图片的base64 编码，不包含头部格式信息 |

**请求参考示例**
```
{
	"imageFile":"test_image_base64_content"
}
```

####响应消息
**响应参数说明**

| 名称  | 类型  | 描述  | 必选/可选  |
| ------------ | ------------ | ------------ | ------------ |
| state  | ReturnState  | 返回状态枚举值  | 必选  |
| errorCode  | String  | 返回错误码  | 可选  |
| errorMessage  | String  | 返回消息描述  | 可选  |
| requestId  | String  | 请求唯一标识，算法的TaskID  | 必选  |
| body  | String/json  | 识别结果，多张车牌只会返回置信度最高的  |  可选 |
| +number  | String  | body 的内容，车牌号  | 可选  |
| +color  | String  | body 的内容，车牌类型blue:蓝色车牌;yellow:黄色车牌;white:白色车牌;black:黑色车牌,green:绿色车牌;unknown:未知颜色车牌颜色  | 可选  |

**响应参考示例**
```
{
	"state": "OK",
	"requestId": "TaskID”
	"body": {
		"number": "粤A1365 学",
		"color": "yellow"
	}
}
```

**响应错误码**

| 编号  | 错误码  | 错误信息  | 说明  |
| ------------ | ------------ | ------------ | ------------ |
| 1  | ParameterError  | 请求参数有误  | 1、imageFile 参数不携带；<br>2、imageFile 输入错误；<br>3、imageFile 非base64 编码；<br>4、imageFile 非图片的base64 编码  |
| 2  | InternalError  | 内部错误  | 1、网络、算法地址错误等原因造成算法无法请求<br>2、算法返回结果为空<br>3、算法内部错误，没有正常识别<br>4、算法请求超时  |
| 3  | TooLargeFileError  | 输入文件过大  | imageFile 的base64 编码超过10M  |
| 4  | DetectError  | 未检测出有效图片  | imageFile 为不包含检测目标的图片  |

##POST 抄表识别
###功能介绍
抄表识别服务接口主要用于识别电表图像信息。提供了API 接入方式，输入jpg、jpeg、png、bmp 格式图片的base64 编码，结构化输出车牌信息。输出字段包括：电表数值、置信度等信息。该接口隶属于仪器仪表识别产品。图片编码后的大小不超过2MB。
####请求消息
```
URI: /ecloud/ai/v1/ocr/v1/ ammeter
Method: POST
```

**请求参数说明**

|参数名称   | 参数类型  |  是否必须 | 参数说明  |
| ------------ | ------------ | ------------ | ------------ |
| imageFile  |  string |  是 |  图片的base64 编码，不包含头部格式信息 |

**请求参考示例**
```
{
	"imageFile": "example_image_file_base64"
}
```

####响应消息
**响应参数说明**

| 名称  | 类型  | 描述  | 必选/可选  |
| ------------ | ------------ | ------------ | ------------ |
| state  | ReturnState  | 返回状态枚举值  | 必选  |
| errorCode  | String  | 返回错误码  | 可选  |
| errorMessage  | String  | 返回消息描述  | 可选  |
| requestId  | String  | 请求唯一标识，算法的TaskID  | 必选  |
| body  | String/json  | 泛型，封装响应内容  |  可选 |
| +number  | String  | body 的内容，电表数值  | 可选  |
| +prob  | String  | body 的内容，电表数值的置信度  | 可选  |
| +location  | List  | number 各组成数字的坐标位置  | 可选  |
| ++x  | String  | location 的内容，x 坐标  | 可选  |
| ++y  | String  | location 的内容，y 坐标  | 可选  |
| ++width  | String  | location 的内容，矩形框宽  | 可选  |
| ++high  | String  |location 的内容，矩形框高  | 可选  |

**响应参考示例**
```
{
	"state" : "OK",
	"requestId" : "TaskID",
	"body" : {
		"number" : "12246",
		"prob" : " 0.964559 "
		“location” : [{
				“x” : ”115”,
				“y” : ”158”,
				“width” : “47”,
				“high”：”62”
			}, {
				“x” : ”185”,
				“y” : ”156”,
				“width” : “42”,
				“high”：”65”
			}, {
				“x” : ”252”,
				“y” : ”156”,
				“width” : “45”,
				“high”：”69”
			}, {
				“x” : ”323”,
				“y” : ”155”,
				“width” : “44”,
				“high”：”69”
			}, {
				“x” : ”396”,
				“y” : ”157”,
				“width” : “41”,
				“high”：”67”
			}
		]
	}
}
```

**响应错误码**

| 编号  | 错误码  | 错误信息  | 说明  |
| ------------ | ------------ | ------------ | ------------ |
| 1  | ParameterError  | 请求参数有误  | 1、imageFile 参数不携带；<br>2、imageFile 输入错误；<br>3、imageFile 非base64 编码；<br>4、imageFile 非图片的base64 编码  |
| 2  | InternalError  | 内部错误  | 1、网络、算法地址错误等原因造成算法无法请求<br>2、算法返回结果为空<br>3、算法内部错误，没有正常识别<br>4、算法请求超时  |
| 3  | TooLargeFileError  | 输入文件过大  | imageFile 的base64 编码超过10M  |
| 4  | DetectError  | 未检测出有效图片  | imageFile 为不包含检测目标的图片  |
